---
#check  os



- name: check os pass
  debug: msg="OS is check pass, OS is {{ ansible_os_family }} , ARCH is {{ ansible_architecture }} , Kernel is {{ ansible_kernel }} ."
  when: ansible_os_family == "RedHat" and ansible_architecture == "x86_64" and ansible_kernel >= "3.10.0-327"

- name: check os error
  pause: prompt="OS  check error !!" 
  when:  ansible_os_family != "RedHat" or ansible_architecture != "x86_64" or not ansible_kernel >= "3.10.0-327"

- name: check yum repo
  action: shell  curl -m 3 -s -i http://{% if reposerver %}{{ reposerver }}{% else %}{{ hostvars[groups['registries'][0]]['ansible_host']}}{% endif %}:82/latest/
  register: result
  until: result.stdout.find("HTTP/1.1 200 OK") != -1
  ignore_errors: True

- name: check disk
  shell: fdisk -l {{docker_data_vol}}
  register: ckeck_disk_result
  ignore_errors: True
- name: check network static ip
  shell: grep  -r "BOOTPROTO" /etc/sysconfig/network-scripts/ifcfg-*|awk -F '[=:]' '{print $1 " " $3}'
  register: ckeck_staticip_result
  ignore_errors: True

- name: check network resolv is empty
  shell: cat /etc/resolv.conf
  register: ckeck_resolv_result
  ignore_errors: True

- name: show check info
  debug: var=ckeck_disk_result.stdout_lines verbosity=0
  when: ckeck_disk_result|succeeded

- name: display check disk error
  debug: msg=" The host did not detect the disk  '{{docker_data_vol}}' , Please check the host disk  "
  when: ckeck_disk_result|failed
  ignore_errors: True

- name: show network info
  debug: var=ckeck_staticip_result.stdout_lines verbosity=0

- name: show resolv info
  debug: var=ckeck_resolv_result.stdout_lines verbosity=0


- name: display network check error
  debug: msg="Network check out dhcp IP and nameserver,  Please set static IP for all network interfaces and emptying /etc/reslove.conf "
  when: ckeck_resolv_result.stdout.find("nameserver") != -1 or ckeck_resolv_result.stdout.find("search") != -1  or ckeck_staticip_result.stdout.find("dhcp") != -1



